{"ast":null,"code":"var _jsxFileName = \"/Users/ijun-yeong/Downloads/2021-11-30/client/src/components/Top5Item.js\",\n    _s = $RefreshSig$();\n\nimport { React, useContext, useState } from \"react\";\nimport { GlobalStoreContext } from '../store';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport ListItem from '@mui/material/ListItem';\nimport IconButton from '@mui/material/IconButton';\nimport EditIcon from '@mui/icons-material/Edit';\n/*\n    This React component represents a single item in our\n    Top 5 List, which can be edited or moved around.\n    \n    @author McKilla Gorilla\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Top5Item(props) {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const [editActive, setEditActive] = useState(false);\n  const [draggedTo, setDraggedTo] = useState(0);\n  let {\n    index\n  } = props;\n\n  function handleDragStart(event, targetId) {\n    event.dataTransfer.setData(\"item\", targetId);\n  }\n\n  function handleDragOver(event) {\n    event.preventDefault();\n  }\n\n  function handleDragEnter(event) {\n    event.preventDefault();\n    console.log(\"entering\");\n    setDraggedTo(true);\n  }\n\n  function handleDragLeave(event) {\n    event.preventDefault();\n    console.log(\"leaving\");\n    setDraggedTo(false);\n  }\n\n  function handleDrop(event, targetId) {\n    event.preventDefault();\n    let sourceId = event.dataTransfer.getData(\"item\");\n    sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\n    setDraggedTo(false);\n    console.log(\"handleDrop (sourceId, targetId): ( \" + sourceId + \", \" + targetId + \")\"); // UPDATE THE LIST\n\n    store.addMoveItemTransaction(sourceId, targetId);\n  }\n\n  function handleToggleEdit(event) {\n    event.stopPropagation();\n    toggleEdit();\n  }\n\n  function toggleEdit(event) {\n    let newActive = !editActive;\n\n    if (newActive) {\n      store.setIsItemEditActive();\n    }\n\n    setEditActive(newActive);\n  }\n\n  let text = store.currentList.items[index];\n\n  function handleUpdateText(event) {\n    text = event.target.value;\n  }\n\n  function handleKeyPress(event) {\n    if (event.code === \"Enter\") {\n      store.addUpdateItemTransaction(index, text);\n      toggleEdit();\n    }\n  }\n\n  function handleBlur(event) {\n    store.addUpdateItemTransaction(index, text);\n    toggleEdit();\n  }\n\n  let itemClass = \"top5-item\";\n\n  if (draggedTo) {\n    itemClass = \"top5-item-dragged-to\";\n  }\n\n  if (editActive) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        sx: {\n          display: 'flex',\n          p: 1\n        },\n        style: {\n          fontSize: '48pt',\n          width: '100%'\n        },\n        onKeyPress: handleKeyPress,\n        defaultValue: store.currentList.items[index],\n        margin: \"none\",\n        required: true,\n        fullWidth: true,\n        onChange: handleUpdateText,\n        onBlur: handleBlur,\n        className: \"top5-item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    id: 'item-' + (index + 1),\n    className: itemClass,\n    onDragStart: event => {\n      handleDragStart(event, index + 1);\n    },\n    onDragOver: event => {\n      handleDragOver(event, index + 1);\n    },\n    onDragEnter: event => {\n      handleDragEnter(event, index + 1);\n    },\n    onDragLeave: event => {\n      handleDragLeave(event, index + 1);\n    },\n    onDrop: event => {\n      handleDrop(event, index + 1);\n    },\n    draggable: \"true\",\n    sx: {\n      display: 'flex',\n      p: 1\n    },\n    style: {\n      fontSize: '48pt',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"edit\",\n        disabled: editActive,\n        children: /*#__PURE__*/_jsxDEV(EditIcon, {\n          style: {\n            fontSize: '48pt'\n          },\n          onClick: handleToggleEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 1,\n        flexGrow: 1\n      },\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }, this)]\n  }, props.key, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Top5Item, \"SQy1P3BHgaYOrETCNJaYXPLC8ro=\");\n\n_c = Top5Item;\nexport default Top5Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Top5Item\");","map":{"version":3,"sources":["/Users/ijun-yeong/Downloads/2021-11-30/client/src/components/Top5Item.js"],"names":["React","useContext","useState","GlobalStoreContext","TextField","Box","ListItem","IconButton","EditIcon","Top5Item","props","store","editActive","setEditActive","draggedTo","setDraggedTo","index","handleDragStart","event","targetId","dataTransfer","setData","handleDragOver","preventDefault","handleDragEnter","console","log","handleDragLeave","handleDrop","sourceId","getData","substring","indexOf","addMoveItemTransaction","handleToggleEdit","stopPropagation","toggleEdit","newActive","setIsItemEditActive","text","currentList","items","handleUpdateText","target","value","handleKeyPress","code","addUpdateItemTransaction","handleBlur","itemClass","display","p","fontSize","width","flexGrow","key"],"mappings":"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","sourcesContent":["import { React, useContext, useState } from \"react\";\nimport { GlobalStoreContext } from '../store'\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport ListItem from '@mui/material/ListItem';\nimport IconButton from '@mui/material/IconButton';\nimport EditIcon from '@mui/icons-material/Edit';\n/*\n    This React component represents a single item in our\n    Top 5 List, which can be edited or moved around.\n    \n    @author McKilla Gorilla\n*/\nfunction Top5Item(props) {\n    const { store } = useContext(GlobalStoreContext);\n    const [editActive, setEditActive] = useState(false);\n    const [draggedTo, setDraggedTo] = useState(0);\n    let { index } = props;\n\n    function handleDragStart(event, targetId) {\n        event.dataTransfer.setData(\"item\", targetId);\n    }\n\n    function handleDragOver(event) {\n        event.preventDefault();\n    }\n\n    function handleDragEnter(event) {\n        event.preventDefault();\n        console.log(\"entering\");\n        setDraggedTo(true);\n    }\n\n    function handleDragLeave(event) {\n        event.preventDefault();\n        console.log(\"leaving\");\n        setDraggedTo(false);\n    }\n\n    function handleDrop(event, targetId) {\n        event.preventDefault();\n        let sourceId = event.dataTransfer.getData(\"item\");\n        sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\n        setDraggedTo(false);\n\n        console.log(\"handleDrop (sourceId, targetId): ( \" + sourceId + \", \" + targetId + \")\");\n\n        // UPDATE THE LIST\n        store.addMoveItemTransaction(sourceId, targetId);\n    }\n    \n    function handleToggleEdit(event){\n        event.stopPropagation();\n        toggleEdit();\n    }\n    \n    function toggleEdit(event){\n        let newActive = !editActive;\n        if (newActive) {\n            store.setIsItemEditActive();\n        }\n        setEditActive(newActive);\n    }\n    let text=store.currentList.items[index];\n    function handleUpdateText(event){\n        text=event.target.value;\n    }\n\n    function handleKeyPress(event){\n        if (event.code === \"Enter\") {\n            store.addUpdateItemTransaction(index,text);\n            toggleEdit();\n        }\n    }\n\n    function handleBlur(event){\n        store.addUpdateItemTransaction(index,text);\n        toggleEdit();\n    }\n\n    let itemClass = \"top5-item\";\n    if (draggedTo) {\n        itemClass = \"top5-item-dragged-to\";\n    }\n    if (editActive){\n        return(\n                <Box>\n                    <TextField \n                    sx={{ display: 'flex', p: 1 }}\n                    style={{\n                        fontSize: '48pt',\n                        width: '100%'\n                    }}\n                    onKeyPress={handleKeyPress}\n                    defaultValue={store.currentList.items[index]}\n                    margin=\"none\"\n                    required\n                    fullWidth\n                    onChange={handleUpdateText}\n                    onBlur={handleBlur}\n                    className={\"top5-item\"}\n                    >\n                    \n                    </TextField>\n                </Box>\n        );\n    }\n\n    return (\n            <ListItem\n                id={'item-' + (index+1)}\n                key={props.key}\n                className={itemClass}\n                onDragStart={(event) => {\n                    handleDragStart(event, (index+1))\n                }}\n                onDragOver={(event) => {\n                    handleDragOver(event, (index+1))\n                }}\n                onDragEnter={(event) => {\n                    handleDragEnter(event, (index+1))\n                }}\n                onDragLeave={(event) => {\n                    handleDragLeave(event, (index+1))\n                }}\n                onDrop={(event) => {\n                    handleDrop(event, (index+1))\n                }}\n                draggable=\"true\"\n                sx={{ display: 'flex', p: 1 }}\n                style={{\n                    fontSize: '48pt',\n                    width: '100%'\n                }}\n            >\n            <Box sx={{ p: 1 }}>\n                <IconButton aria-label='edit'\n                    disabled={editActive}>\n                    <EditIcon style={{fontSize:'48pt'}}\n                        onClick={handleToggleEdit}  />\n                </IconButton>\n            </Box>\n                <Box sx={{ p: 1, flexGrow: 1 }}>{props.text}</Box>\n            </ListItem>\n    )\n}\n\nexport default Top5Item;"]},"metadata":{},"sourceType":"module"}